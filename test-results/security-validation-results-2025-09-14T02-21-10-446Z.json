{
  "timestamp": "2025-09-14T02:21:10.243Z",
  "overallStatus": "warning",
  "criticalIssues": 0,
  "highIssues": 1,
  "mediumIssues": 0,
  "lowIssues": 0,
  "securityScore": 95,
  "testResults": {
    "securityTestSuite": {
      "suiteName": "Security Test Suite",
      "startTime": "2025-09-14T02:21:09.356Z",
      "endTime": "2025-09-14T02:21:10.170Z",
      "duration": 814,
      "totalTests": 22,
      "passed": 22,
      "failed": 0,
      "skipped": 0,
      "authenticationResults": [
        {
          "testName": "Admin Token Validation",
          "status": "pass",
          "duration": 7,
          "details": {
            "validTokenStatus": 200,
            "invalidTokenStatus": 200,
            "noTokenStatus": 200
          }
        },
        {
          "testName": "Smoke Mode Security Behavior",
          "status": "pass",
          "duration": 2,
          "details": {
            "smokeResponseStatus": 200,
            "aiDemoMode": false
          }
        },
        {
          "testName": "Session Security Validation",
          "status": "pass",
          "duration": 80,
          "details": {
            "securityHeaders": {
              "x-content-type-options": "nosniff",
              "x-frame-options": "DENY",
              "x-xss-protection": "1; mode=block",
              "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
              "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests"
            },
            "corsStatus": 200,
            "corsHeaders": {
              "access-control-allow-origin": null,
              "access-control-allow-methods": null
            },
            "sessionTests": [
              {
                "test": "valid_token_session",
                "status": 200,
                "expected": [200, 400],
                "passed": true
              },
              {
                "test": "token_reuse",
                "status1": 200,
                "status2": 200,
                "passed": true
              },
              {
                "test": "concurrent_sessions",
                "statuses": [200, 200, 200, 200, 200],
                "passed": true
              },
              {
                "test": "session_timeout_simulation",
                "status": 200,
                "passed": true
              }
            ],
            "allSessionTestsPassed": true
          }
        },
        {
          "testName": "Authentication Bypass Prevention",
          "status": "pass",
          "duration": 84,
          "details": {
            "bypassAttempts": [
              {
                "endpoint": "/api/demo/seed",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/seed",
                "headers": {
                  "Authorization": "Bearer "
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/time",
                "headers": {
                  "Authorization": "Bearer "
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/demo/reset",
                "headers": {
                  "Authorization": "Bearer "
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/pos/sales",
                "headers": {
                  "Authorization": "Bearer "
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "headers": {
                  "Authorization": "Bearer aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {},
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": ""
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Basic admin-token"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer ' OR '1'='1"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer test\r\nX-Admin: true"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer test\r\nX-Admin: true\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer \u0000admin"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer \u0000admin\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer admin\u0000"
                },
                "status": "error",
                "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value.",
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "authorization": "Bearer admin"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": ["Bearer fake", "Bearer admin"]
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer <script>alert(1)</script>"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer admin; rm -rf /"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer ../../../etc/passwd"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer {\"admin\": true}"
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "headers": {
                  "Authorization": "Bearer "
                },
                "status": 401,
                "shouldBeRejected": true,
                "actuallyRejected": true
              }
            ],
            "validAuthTests": [
              {
                "endpoint": "/api/demo/seed",
                "status": 200,
                "authenticated": true
              },
              {
                "endpoint": "/api/demo/time",
                "status": 200,
                "authenticated": true
              },
              {
                "endpoint": "/api/demo/reset",
                "status": 200,
                "authenticated": true
              },
              {
                "endpoint": "/api/pos/sales",
                "status": 400,
                "authenticated": true
              },
              {
                "endpoint": "/api/marketing/campaigns",
                "status": 400,
                "authenticated": true
              },
              {
                "endpoint": "/api/loyalty/entries",
                "status": 400,
                "authenticated": true
              }
            ],
            "totalBypassAttempts": 90,
            "rejectedAttempts": 90,
            "serverErrors": 0
          }
        },
        {
          "testName": "Session Hijacking Prevention",
          "status": "pass",
          "duration": 2,
          "details": {
            "sessionId1": null,
            "sessionId2": null,
            "manipulatedResponseStatus": 200,
            "concurrentRequestsSuccessful": true,
            "concurrentStatuses": [200, 200, 200]
          }
        },
        {
          "testName": "Comprehensive Authentication Bypass Tests",
          "status": "pass",
          "duration": 52,
          "details": {
            "bypassTestResults": [
              {
                "testName": "Header Injection Prevention",
                "status": "pass",
                "duration": 0,
                "details": {
                  "injectionAttempts": [
                    {
                      "header": "Bearer token\r\nX-Admin: true...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\r\nX-Admin: true\" is an invalid header value."
                    },
                    {
                      "header": "Bearer token\nX-Admin: true...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\nX-Admin: true\" is an invalid header value."
                    },
                    {
                      "header": "Bearer token\u0000admin...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\u0000admin\" is an invalid header value."
                    },
                    {
                      "header": "Bearer token\u0000admin...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\u0000admin\" is an invalid header value."
                    },
                    {
                      "header": "Bearer token\r\nContent-Length: ...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\r\nContent-Length: 0\r\n\r\nGET /admin\" is an invalid header value."
                    },
                    {
                      "header": "Bearer token\nSet-Cookie: admin...",
                      "status": "blocked",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer token\nSet-Cookie: admin=true\" is an invalid header value."
                    }
                  ],
                  "totalAttempts": 6,
                  "blockedAttempts": 6
                }
              },
              {
                "testName": "Token Format Validation",
                "status": "pass",
                "duration": 21,
                "details": {
                  "tokenTests": [
                    {
                      "token": "' OR '1'='1",
                      "tokenLength": 11,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "<script>alert(1)</script>",
                      "tokenLength": 25,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin; rm -rf /",
                      "tokenLength": 15,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "../../../etc/passwd",
                      "tokenLength": 19,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "{\"admin\": true}",
                      "tokenLength": 15,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin\u0000",
                      "tokenLength": 6,
                      "status": "error",
                      "blocked": true,
                      "error": "Headers.append: \"Bearer admin\u0000\" is an invalid header value."
                    },
                    {
                      "token": "admin\r\n",
                      "tokenLength": 7,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin\n",
                      "tokenLength": 6,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin\\x27",
                      "tokenLength": 9,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin%27",
                      "tokenLength": 8,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin/*comment*/",
                      "tokenLength": 16,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin--comment",
                      "tokenLength": 14,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin#comment",
                      "tokenLength": 13,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin?param=value",
                      "tokenLength": 17,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin:password",
                      "tokenLength": 14,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin@@version",
                      "tokenLength": 14,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin UNION SELECT 1",
                      "tokenLength": 20,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "javascript:alert(1)",
                      "tokenLength": 19,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "vbscript:msgbox(1)",
                      "tokenLength": 18,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "onload=alert(1)",
                      "tokenLength": 15,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "onerror=alert(1)",
                      "tokenLength": 16,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "eval(alert(1))",
                      "tokenLength": 14,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "exec('rm -rf /')",
                      "tokenLength": 16,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...",
                      "tokenLength": 1000,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "",
                      "tokenLength": 0,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": " ",
                      "tokenLength": 1,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin ",
                      "tokenLength": 6,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": " admin",
                      "tokenLength": 6,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "ad min",
                      "tokenLength": 6,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin\t",
                      "tokenLength": 6,
                      "status": 401,
                      "blocked": true
                    },
                    {
                      "token": "admin\u000b",
                      "tokenLength": 6,
                      "status": "error",
                      "blocked": true,
                      "error": "fetch failed"
                    },
                    {
                      "token": "admin\f",
                      "tokenLength": 6,
                      "status": "error",
                      "blocked": true,
                      "error": "fetch failed"
                    },
                    {
                      "token": "admin\b",
                      "tokenLength": 6,
                      "status": "error",
                      "blocked": true,
                      "error": "fetch failed"
                    }
                  ],
                  "totalTokens": 33,
                  "blockedTokens": 33
                }
              },
              {
                "testName": "Rate Limiting Protection",
                "status": "pass",
                "duration": 15,
                "details": {
                  "attempts": [
                    {
                      "attempt": 1,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 2,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 3,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 4,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 5,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 6,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 7,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 8,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 9,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 10,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 11,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 12,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 13,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 14,
                      "status": 401,
                      "rateLimited": false
                    },
                    {
                      "attempt": 15,
                      "status": 401,
                      "rateLimited": false
                    }
                  ],
                  "totalAttempts": 15,
                  "rateLimitedAttempts": 0,
                  "firstRateLimitAt": "none",
                  "rateLimitingDisabled": true,
                  "testMode": "authentication_validation"
                }
              },
              {
                "testName": "Security Headers Presence",
                "status": "pass",
                "duration": 0,
                "details": {
                  "headers": {
                    "x-content-type-options": "nosniff",
                    "x-frame-options": "DENY",
                    "x-xss-protection": "1; mode=block",
                    "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests"
                  },
                  "poweredByRemoved": true,
                  "allHeadersPresent": true
                }
              },
              {
                "testName": "Session Security Validation",
                "status": "pass",
                "duration": 2,
                "details": {
                  "sessionTests": [
                    {
                      "test": "valid_authentication",
                      "passed": true,
                      "status": 200
                    },
                    {
                      "test": "session_id_present",
                      "passed": true,
                      "sessionId": "sess_mfj2jght_xwvdb5glow"
                    },
                    {
                      "test": "auth_time_present",
                      "passed": true,
                      "authTime": "2025-09-14T02:21:09.569Z"
                    },
                    {
                      "test": "session_id_changes",
                      "passed": true,
                      "firstSessionId": "sess_mfj2jght_xwvdb5glow",
                      "secondSessionId": "sess_mfj2jghu_fmsb7j9n6h"
                    }
                  ],
                  "allTestsPassed": true
                }
              },
              {
                "testName": "Advanced Bypass Attempts",
                "status": "pass",
                "duration": 13,
                "details": {
                  "bypassAttempts": [
                    {
                      "description": "lowercase header",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "uppercase header",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "multiple auth headers",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "zero-width space",
                      "status": "blocked",
                      "blocked": true,
                      "success": false,
                      "error": "Cannot convert argument to a ByteString because the character at index 12 has a value of 8203 which is greater than 255."
                    },
                    {
                      "description": "BOM character",
                      "status": "blocked",
                      "blocked": true,
                      "success": false,
                      "error": "Cannot convert argument to a ByteString because the character at index 7 has a value of 65279 which is greater than 255."
                    },
                    {
                      "description": "URL encoded",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "hex encoded",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "basic auth",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "digest auth",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "very long token",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "null byte injection",
                      "status": "blocked",
                      "blocked": true,
                      "success": false,
                      "error": "Headers.append: \"Bearer admin\u0000bypass\" is an invalid header value."
                    },
                    {
                      "description": "template injection",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "ruby template injection",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "path traversal",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "command injection backticks",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "command injection dollar",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "LDAP injection",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    },
                    {
                      "description": "NoSQL injection",
                      "status": 401,
                      "blocked": true,
                      "success": false
                    }
                  ],
                  "totalAttempts": 18,
                  "blockedAttempts": 18,
                  "unblockedAttempts": 0
                }
              }
            ],
            "totalBypassTests": 6,
            "passedBypassTests": 6,
            "failedBypassTests": 0
          }
        }
      ],
      "inputValidationResults": [
        {
          "testName": "Comprehensive XSS Prevention Testing",
          "status": "pass",
          "duration": 312,
          "details": {
            "xssFrameworkResults": [
              {
                "testName": "Comprehensive XSS Prevention Testing",
                "status": "pass",
                "duration": 303,
                "details": {
                  "totalTests": 352,
                  "blockedTests": 352,
                  "blockingRate": "100.0",
                  "criticalFailures": 0,
                  "highSeverityFailures": 0,
                  "testResults": [
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<script>alert(\"XSS\")</script>",
                      "payloadLocation": "query",
                      "category": "script",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<SCRIPT>alert(\"XSS\")</SCRIPT>",
                      "payloadLocation": "query",
                      "category": "script",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<script src=\"http://evil.com/xss.js\"></script>",
                      "payloadLocation": "query",
                      "category": "script",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<script>eval(String.fromCharCode(97,108,101,114,11...",
                      "payloadLocation": "query",
                      "category": "script",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<img src=x onerror=alert(\"XSS\")>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<body onload=alert(\"XSS\")>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<svg onload=alert(\"XSS\")>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<input onfocus=alert(\"XSS\") autofocus>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<select onfocus=alert(\"XSS\") autofocus><option>tes...",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<textarea onfocus=alert(\"XSS\") autofocus></textare...",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<keygen onfocus=alert(\"XSS\") autofocus>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<video><source onerror=\"alert('XSS')\">",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<audio src=x onerror=alert(\"XSS\")>",
                      "payloadLocation": "query",
                      "category": "event",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "javascript:alert(\"XSS\")",
                      "payloadLocation": "query",
                      "category": "url",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "JaVaScRiPt:alert(\"XSS\")",
                      "payloadLocation": "query",
                      "category": "url",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "vbscript:msgbox(\"XSS\")",
                      "payloadLocation": "query",
                      "category": "url",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "data:text/html,<script>alert(\"XSS\")</script>",
                      "payloadLocation": "query",
                      "category": "url",
                      "severity": "high",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<iframe src=\"javascript:alert('XSS')\"></iframe>",
                      "payloadLocation": "query",
                      "category": "html",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<object data=\"javascript:alert('XSS')\">",
                      "payloadLocation": "query",
                      "category": "html",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    },
                    {
                      "endpoint": "GET /api/health",
                      "payload": "<embed src=\"javascript:alert('XSS')\">",
                      "payloadLocation": "query",
                      "category": "html",
                      "severity": "critical",
                      "status": 200,
                      "blocked": true,
                      "responseLength": 161,
                      "containsPayload": false
                    }
                  ],
                  "payloadCategories": {
                    "script": {
                      "total": 120,
                      "blocked": 120,
                      "failed": 0
                    },
                    "event": {
                      "total": 80,
                      "blocked": 80,
                      "failed": 0
                    },
                    "url": {
                      "total": 32,
                      "blocked": 32,
                      "failed": 0
                    },
                    "html": {
                      "total": 48,
                      "blocked": 48,
                      "failed": 0
                    },
                    "css": {
                      "total": 32,
                      "blocked": 32,
                      "failed": 0
                    },
                    "unicode": {
                      "total": 16,
                      "blocked": 16,
                      "failed": 0
                    },
                    "encoded": {
                      "total": 24,
                      "blocked": 24,
                      "failed": 0
                    }
                  }
                }
              },
              {
                "testName": "Input Sanitization Validation",
                "status": "pass",
                "duration": 7,
                "details": {
                  "testResults": [
                    {
                      "input": "<script>alert(\"test\")</script>",
                      "expectedBehavior": "sanitized",
                      "description": "Script tags should be sanitized",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    },
                    {
                      "input": "<img src=x onerror=alert(\"test\")>",
                      "expectedBehavior": "sanitized",
                      "description": "Event handlers should be sanitized",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    },
                    {
                      "input": "javascript:alert(\"test\")",
                      "expectedBehavior": "sanitized",
                      "description": "JavaScript URLs should be sanitized",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    },
                    {
                      "input": "Normal text content",
                      "expectedBehavior": "preserved",
                      "description": "Normal text should be preserved",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    },
                    {
                      "input": "   whitespace   ",
                      "expectedBehavior": "trimmed",
                      "description": "Whitespace should be trimmed",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    },
                    {
                      "input": "",
                      "expectedBehavior": "handled",
                      "description": "Empty strings should be handled",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": {
                        "message": "Invalid authentication token",
                        "error": "INVALID_TOKEN"
                      }
                    }
                  ],
                  "totalTests": 6,
                  "properlyHandled": 6
                }
              },
              {
                "testName": "Output Encoding Validation",
                "status": "pass",
                "duration": 1,
                "details": {
                  "contentType": "application/json; charset=utf-8",
                  "hasProperContentType": true,
                  "containsUnescapedHTML": false,
                  "responseLength": 161
                }
              },
              {
                "testName": "Content Security Policy Validation",
                "status": "pass",
                "duration": 0,
                "details": {
                  "cspHeader": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "requiredDirectives": [
                    "default-src",
                    "script-src",
                    "style-src",
                    "img-src",
                    "connect-src",
                    "frame-ancestors"
                  ],
                  "missingDirectives": [],
                  "foundUnsafe": ["unsafe-eval", "data:", "unsafe-inline"],
                  "isStrict": false
                }
              }
            ],
            "totalXSSTests": 360,
            "passedXSSTests": 4,
            "comprehensiveTestingEnabled": true
          }
        },
        {
          "testName": "Comprehensive Input Validation Testing",
          "status": "pass",
          "duration": 84,
          "details": {
            "validationSuiteResults": [
              {
                "testName": "Endpoint Input Validation Coverage",
                "status": "pass",
                "duration": 14,
                "details": {
                  "totalEndpoints": 15,
                  "validationGaps": 0,
                  "testResults": [
                    {
                      "endpoint": "POST /api/chat",
                      "description": "Chat API endpoint",
                      "inputFields": ["messages"],
                      "status": 400,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "POST /api/demo/seed",
                      "description": "Demo data seeding",
                      "inputFields": ["scenario", "seed"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "POST /api/demo/time",
                      "description": "Demo time controls",
                      "inputFields": ["date", "clear"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "POST /api/pos/sales",
                      "description": "POS sales creation",
                      "inputFields": ["items", "discountPct", "taxPct"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "POST /api/marketing/campaigns",
                      "description": "Marketing campaign creation",
                      "inputFields": ["name", "description", "channel", "status"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "PATCH /api/marketing/campaigns/test-id",
                      "description": "Marketing campaign update",
                      "inputFields": ["name", "description", "channel", "status"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "POST /api/loyalty/entries",
                      "description": "Loyalty entry creation",
                      "inputFields": ["customerId", "type", "points", "note"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    },
                    {
                      "endpoint": "GET /api/appointments",
                      "description": "Appointments with query filters",
                      "inputFields": ["day", "date"],
                      "status": 200,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/loyalty/entries",
                      "description": "Loyalty entries with customer filter",
                      "inputFields": ["customerId"],
                      "status": 200,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/staff/test-id",
                      "description": "Staff member by ID",
                      "inputFields": ["id"],
                      "status": 404,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/services/test-id",
                      "description": "Service by ID",
                      "inputFields": ["id"],
                      "status": 404,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/appointments/test-id",
                      "description": "Appointment by ID",
                      "inputFields": ["id"],
                      "status": 404,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/inventory/test-id",
                      "description": "Inventory item by ID",
                      "inputFields": ["id"],
                      "status": 404,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "GET /api/analytics/test-id",
                      "description": "Analytics data by ID",
                      "inputFields": ["id"],
                      "status": 404,
                      "validated": true,
                      "requiresAuth": false
                    },
                    {
                      "endpoint": "DELETE /api/pos/sales/test-id",
                      "description": "Delete POS sale by ID",
                      "inputFields": ["id"],
                      "status": 401,
                      "validated": true,
                      "requiresAuth": true
                    }
                  ]
                }
              },
              {
                "testName": "Malicious Payload Detection",
                "status": "pass",
                "duration": 20,
                "details": {
                  "totalPayloads": 17,
                  "undetectedPayloads": 0,
                  "testResults": [
                    {
                      "payload": "Basic XSS script injection",
                      "category": "xss",
                      "expectedBehavior": "sanitize",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "XSS via image onerror",
                      "category": "xss",
                      "expectedBehavior": "sanitize",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "JavaScript URL scheme",
                      "category": "xss",
                      "expectedBehavior": "sanitize",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "SQL injection with table drop",
                      "category": "sql",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "SQL injection boolean bypass",
                      "category": "sql",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "SQL injection union select",
                      "category": "sql",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Command injection file deletion",
                      "category": "command",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Command injection file read",
                      "category": "command",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Command injection command substitution",
                      "category": "command",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Path traversal to system files",
                      "category": "path",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Windows path traversal",
                      "category": "path",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Template injection expression",
                      "category": "template",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Template literal injection",
                      "category": "template",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Null byte injection",
                      "category": "null",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Extremely large payload",
                      "category": "dos",
                      "expectedBehavior": "reject",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "JSON object injection",
                      "category": "json",
                      "expectedBehavior": "sanitize",
                      "status": 401,
                      "detected": true
                    },
                    {
                      "payload": "Unicode BOM and invalid characters",
                      "category": "unicode",
                      "expectedBehavior": "sanitize",
                      "status": 401,
                      "detected": true
                    }
                  ],
                  "detectionRate": "100.0"
                }
              },
              {
                "testName": "Input Sanitization Effectiveness",
                "status": "pass",
                "duration": 4,
                "details": {
                  "testResults": [
                    {
                      "input": "Mixed malicious and normal content",
                      "expected": "sanitized",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": "{\"message\":\"Invalid authentication token\",\"error\":\"INVALID_TOKEN\"}"
                    },
                    {
                      "input": "Whitespace handling",
                      "expected": "trimmed",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": "{\"message\":\"Invalid authentication token\",\"error\":\"INVALID_TOKEN\"}"
                    },
                    {
                      "input": "Legitimate content preservation",
                      "expected": "preserved",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": "{\"message\":\"Invalid authentication token\",\"error\":\"INVALID_TOKEN\"}"
                    },
                    {
                      "input": "Empty input handling",
                      "expected": "handled",
                      "status": 401,
                      "properlyHandled": true,
                      "responseData": "{\"message\":\"Invalid authentication token\",\"error\":\"INVALID_TOKEN\"}"
                    }
                  ],
                  "totalTests": 4,
                  "properlyHandled": 4,
                  "improperlyHandled": 0
                }
              },
              {
                "testName": "Parameter Validation",
                "status": "pass",
                "duration": 3,
                "details": {
                  "testResults": [
                    {
                      "description": "Negative quantity validation",
                      "endpoint": "POST /api/pos/sales",
                      "status": 401,
                      "validated": false
                    },
                    {
                      "description": "Negative price validation",
                      "endpoint": "POST /api/pos/sales",
                      "status": 401,
                      "validated": false
                    },
                    {
                      "description": "Empty required field validation",
                      "endpoint": "POST /api/loyalty/entries",
                      "status": 401,
                      "validated": false
                    },
                    {
                      "description": "Invalid enum value validation",
                      "endpoint": "POST /api/loyalty/entries",
                      "status": 401,
                      "validated": false
                    }
                  ],
                  "totalTests": 4,
                  "validated": 0,
                  "unvalidated": 4
                }
              },
              {
                "testName": "Content-Type Validation",
                "status": "pass",
                "duration": 4,
                "details": {
                  "testResults": [
                    {
                      "description": "XML content type rejection",
                      "contentType": "application/xml",
                      "status": 415,
                      "rejected": true
                    },
                    {
                      "description": "HTML content type rejection",
                      "contentType": "text/html",
                      "status": 415,
                      "rejected": true
                    },
                    {
                      "description": "Form data content type rejection",
                      "contentType": "multipart/form-data",
                      "status": 415,
                      "rejected": true
                    },
                    {
                      "description": "Missing content type rejection",
                      "contentType": "missing",
                      "status": 415,
                      "rejected": true
                    }
                  ],
                  "totalTests": 4,
                  "rejected": 4
                }
              },
              {
                "testName": "Request Size Validation",
                "status": "pass",
                "duration": 39,
                "details": {
                  "payloadSize": 5242880,
                  "status": 413,
                  "rejected": true,
                  "description": "Large payload rejection test"
                }
              }
            ],
            "totalValidationTests": 6,
            "passedValidationTests": 6,
            "comprehensiveValidationEnabled": true
          }
        },
        {
          "testName": "SQL Injection Prevention Testing",
          "status": "pass",
          "duration": 21,
          "details": {
            "totalPayloads": 10,
            "testResults": [
              {
                "payload": "' OR '1'='1",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR '1'='1",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "'; DROP TABLE users; --",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "'; DROP TABLE users; --",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' UNION SELECT * FROM users --",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' UNION SELECT * FROM users --",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "admin'--",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "admin'--",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "admin'/*",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "admin'/*",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR 1=1#",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR 1=1#",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR 'a'='a",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR 'a'='a",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "') OR ('1'='1",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "') OR ('1'='1",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "1' AND (SELECT COUNT(*) FROM users) > 0 --",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "1' AND (SELECT COUNT(*) FROM users) > 0 --",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "'; EXEC xp_cmdshell('dir'); --",
                "location": "staff_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "'; EXEC xp_cmdshell('dir'); --",
                "location": "service_id",
                "status": 404,
                "safe": true
              },
              {
                "payload": "' OR '1'='1",
                "location": "date_query",
                "status": 200,
                "safe": true
              },
              {
                "payload": "'; DROP TABLE users; --",
                "location": "date_query",
                "status": 400,
                "safe": true
              },
              {
                "payload": "' UNION SELECT * FROM users --",
                "location": "date_query",
                "status": 400,
                "safe": true
              }
            ],
            "unsafeResponses": 0
          }
        },
        {
          "testName": "Malicious Payload Handling",
          "status": "pass",
          "duration": 47,
          "details": {
            "totalPayloads": 12,
            "testResults": [
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "GET /api/health",
                "status": 431,
                "safe": true
              },
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "test\u0000admin",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "﻿￾￿",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "﻿￾￿",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "﻿￾￿",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "‮‭‬",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "‮‭‬",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "‮‭‬",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "\r\n\r\nHTTP/1.1 200 OK\r\n\r\n<script>alert(\"XSS\")</scrip...",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "\r\n\r\nHTTP/1.1 200 OK\r\n\r\n<script>alert(\"XSS\")</scrip...",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "\r\n\r\nHTTP/1.1 200 OK\r\n\r\n<script>alert(\"XSS\")</scrip...",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "{\"admin\": true}",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "{\"admin\": true}",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "{\"admin\": true}",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "\"}{\"admin\": true}{\"",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "\"}{\"admin\": true}{\"",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "\"}{\"admin\": true}{\"",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "&lt;&gt;&amp;&quot;&#x27;&#x2F;",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "&lt;&gt;&amp;&quot;&#x27;&#x2F;",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "&lt;&gt;&amp;&quot;&#x27;&#x2F;",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "../../../etc/passwd",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "../../../etc/passwd",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "../../../etc/passwd",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              },
              {
                "payload": "..\\..\\..\\windows\\system32\\config\\sam",
                "endpoint": "GET /api/health",
                "status": 200,
                "safe": true
              },
              {
                "payload": "..\\..\\..\\windows\\system32\\config\\sam",
                "endpoint": "POST /api/marketing/campaigns",
                "status": 401,
                "safe": true
              },
              {
                "payload": "..\\..\\..\\windows\\system32\\config\\sam",
                "endpoint": "POST /api/pos/sales",
                "status": 401,
                "safe": true
              }
            ],
            "serverErrors": 0,
            "errorDetails": []
          }
        },
        {
          "testName": "Input Sanitization Validation",
          "status": "pass",
          "duration": 9,
          "details": {
            "testResults": [
              {
                "input": "<script>alert(\"test\")</script>",
                "expected": "sanitized",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "input": "normal text",
                "expected": "preserved",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "input": "   whitespace   ",
                "expected": "trimmed",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "input": "",
                "expected": "empty_handled",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "input": null,
                "expected": "null_handled",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "expected": "undefined_handled",
                "status": 401,
                "responseData": {
                  "message": "Authentication required",
                  "error": "MISSING_AUTH_HEADER"
                },
                "handled": true
              },
              {
                "input": "POS item: {\"name\":\"<script>alert(\\\"xss\\\")</script>\",\"quantity\":1,\"unitPrice\":10}",
                "status": 401,
                "handled": false
              },
              {
                "input": "POS item: {\"name\":\"Valid Item\",\"quantity\":-1,\"unitPrice\":10}",
                "status": 401,
                "handled": false
              },
              {
                "input": "POS item: {\"name\":\"Valid Item\",\"quantity\":1,\"unitPrice\":-5}",
                "status": 401,
                "handled": false
              },
              {
                "input": "POS item: {\"name\":\"\",\"quantity\":1,\"unitPrice\":10}",
                "status": 401,
                "handled": false
              }
            ],
            "unhandledInputs": 4,
            "totalTests": 10
          }
        },
        {
          "testName": "File Upload Security Testing",
          "status": "pass",
          "duration": 3,
          "details": {
            "testResults": [
              {
                "endpoint": "/api/upload",
                "status": 415,
                "exists": true
              },
              {
                "endpoint": "/api/files",
                "status": 415,
                "exists": true
              },
              {
                "endpoint": "/api/import",
                "status": 415,
                "exists": true
              },
              {
                "endpoint": "/api/avatar",
                "status": 415,
                "exists": true
              }
            ],
            "existingEndpoints": 4,
            "note": "No file upload endpoints currently implemented"
          }
        }
      ],
      "apiSecurityResults": [
        {
          "testName": "Rate Limiting Validation",
          "status": "pass",
          "duration": 64,
          "details": {
            "rapidRequests": 50,
            "statusCounts": {
              "200": 50
            },
            "rateLimitedRequests": 0,
            "successfulRequests": 50,
            "endpointResults": [
              {
                "endpoint": "/api/health",
                "responses": [
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/health",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  }
                ],
                "rateLimited": false
              },
              {
                "endpoint": "/api/profile",
                "responses": [
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/profile",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  }
                ],
                "rateLimited": false
              },
              {
                "endpoint": "/api/services",
                "responses": [
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/services",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  }
                ],
                "rateLimited": false
              },
              {
                "endpoint": "/api/staff",
                "responses": [
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/staff",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  }
                ],
                "rateLimited": false
              },
              {
                "endpoint": "/api/analytics",
                "responses": [
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  },
                  {
                    "endpoint": "/api/analytics",
                    "status": 200,
                    "headers": {
                      "x-ratelimit-limit": null,
                      "x-ratelimit-remaining": null,
                      "x-ratelimit-reset": null
                    }
                  }
                ],
                "rateLimited": false
              }
            ],
            "note": "Rate limiting not currently implemented - this is expected behavior"
          }
        },
        {
          "testName": "Authentication Bypass Testing",
          "status": "pass",
          "duration": 10,
          "details": {
            "totalAttempts": 16,
            "testResults": [
              {
                "description": "IP spoofing",
                "headers": {
                  "X-Forwarded-For": "127.0.0.1"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Real IP header",
                "headers": {
                  "X-Real-IP": "127.0.0.1"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Originating IP header",
                "headers": {
                  "X-Originating-IP": "127.0.0.1"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Curl user agent",
                "headers": {
                  "User-Agent": "curl/7.68.0"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Googlebot user agent",
                "headers": {
                  "User-Agent": "Mozilla/5.0 (compatible; Googlebot/2.1)"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Localhost referer",
                "headers": {
                  "Referer": "https://localhost"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Admin referer",
                "headers": {
                  "Referer": "https://admin.localhost"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Host header injection",
                "headers": {
                  "Host": "admin.example.com"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Host header CRLF injection",
                "headers": {
                  "Host": "localhost:80\r\nX-Admin: true"
                },
                "method": "GET",
                "status": 0,
                "safe": false,
                "error": "Headers.append: \"localhost:80\r\nX-Admin: true\" is an invalid header value."
              },
              {
                "description": "Method override",
                "headers": {
                  "X-HTTP-Method-Override": "GET"
                },
                "method": "POST",
                "status": 400,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "HTTP method header",
                "headers": {
                  "X-HTTP-Method": "GET"
                },
                "method": "POST",
                "status": 400,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "UTF-7 charset",
                "headers": {
                  "Content-Type": "application/json; charset=utf-7"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Plain text content type",
                "headers": {
                  "Content-Type": "text/plain"
                },
                "method": "GET",
                "status": 200,
                "safe": true,
                "responseHeaders": {
                  "content-type": "application/json; charset=utf-8",
                  "server": null
                }
              },
              {
                "description": "Parameter pollution",
                "url": "/api/health?test=1&test=2",
                "status": 200,
                "safe": true
              },
              {
                "description": "Parameter pollution",
                "url": "/api/appointments?date=2024-01-01&date=2024-12-31",
                "status": 400,
                "safe": true
              },
              {
                "description": "Parameter pollution",
                "url": "/api/loyalty/entries?customerId=1&customerId=2",
                "status": 200,
                "safe": true
              }
            ],
            "unsafeResponses": 1
          }
        },
        {
          "testName": "Environment Variable Security",
          "status": "pass",
          "duration": 10,
          "details": {
            "testResults": [
              {
                "url": "/api/health?env=OPENAI_API_KEY",
                "status": 200,
                "containsSensitiveInfo": false,
                "responseLength": 161,
                "safe": true
              },
              {
                "url": "/api/health?debug=true",
                "status": 200,
                "containsSensitiveInfo": false,
                "responseLength": 161,
                "safe": true
              },
              {
                "url": "/api/health?config=true",
                "status": 200,
                "containsSensitiveInfo": false,
                "responseLength": 161,
                "safe": true
              },
              {
                "url": "/api/profile?admin=true",
                "status": 200,
                "containsSensitiveInfo": false,
                "responseLength": 946,
                "safe": true
              },
              {
                "url": "/api/demo/seed?env=production",
                "status": 200,
                "containsSensitiveInfo": false,
                "responseLength": 2424,
                "safe": true
              },
              {
                "injection": "${OPENAI_API_KEY}",
                "status": 401,
                "containsSensitiveInfo": false,
                "safe": true
              },
              {
                "injection": "#{ENV['ADMIN_TOKEN']}",
                "status": 401,
                "containsSensitiveInfo": false,
                "safe": true
              },
              {
                "injection": "%OPENAI_API_KEY%",
                "status": 401,
                "containsSensitiveInfo": false,
                "safe": true
              },
              {
                "injection": "$OPENAI_API_KEY",
                "status": 401,
                "containsSensitiveInfo": false,
                "safe": true
              }
            ],
            "exposedInfo": {
              "env": "production",
              "aiDemoMode": false,
              "scenario": "test",
              "timestamp": true
            },
            "unsafeTests": 0,
            "note": "Health endpoint appropriately exposes minimal operational information"
          }
        },
        {
          "testName": "API Endpoint Security Validation",
          "status": "pass",
          "duration": 9,
          "details": {
            "testResults": [
              {
                "endpoint": "GET /api/health",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/profile",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/services",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/staff",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/customers",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/appointments",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/inventory",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/analytics",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/pos/sales",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/marketing/campaigns",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/loyalty/entries",
                "status": 200,
                "securityHeaders": {
                  "x-content-type-options": "nosniff",
                  "x-frame-options": "DENY",
                  "x-xss-protection": "1; mode=block",
                  "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
                  "content-security-policy": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'none'; object-src 'none'; media-src 'self'; child-src 'none'; form-action 'self'; base-uri 'self'; upgrade-insecure-requests",
                  "referrer-policy": "strict-origin-when-cross-origin"
                },
                "contentType": "application/json; charset=utf-8",
                "server": null,
                "exposesServer": false,
                "hasSecurityHeaders": true
              },
              {
                "endpoint": "GET /api/nonexistent",
                "status": 200,
                "exposesStackTrace": false,
                "exposesFilePaths": true,
                "safe": false
              },
              {
                "endpoint": "GET /api/staff/invalid-id",
                "status": 404,
                "exposesStackTrace": false,
                "exposesFilePaths": false,
                "safe": true
              },
              {
                "endpoint": "GET /api/services/999999",
                "status": 404,
                "exposesStackTrace": false,
                "exposesFilePaths": false,
                "safe": true
              },
              {
                "endpoint": "GET /api/appointments/invalid",
                "status": 404,
                "exposesStackTrace": false,
                "exposesFilePaths": false,
                "safe": true
              }
            ],
            "securityIssues": 1,
            "totalEndpoints": 11,
            "note": "Most endpoints lack security headers - consider adding security middleware"
          }
        },
        {
          "testName": "HTTP Method Security Testing",
          "status": "pass",
          "duration": 16,
          "details": {
            "testResults": [
              {
                "endpoint": "/api/health",
                "method": "GET",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "POST",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "PUT",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "DELETE",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "PATCH",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "HEAD",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/health",
                "method": "TRACE",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'TRACE' HTTP method is unsupported."
              },
              {
                "endpoint": "/api/health",
                "method": "CONNECT",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'CONNECT' HTTP method is unsupported."
              },
              {
                "endpoint": "/api/profile",
                "method": "GET",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "POST",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "PUT",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "DELETE",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "PATCH",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "HEAD",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "TRACE",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'TRACE' HTTP method is unsupported."
              },
              {
                "endpoint": "/api/profile",
                "method": "CONNECT",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'CONNECT' HTTP method is unsupported."
              },
              {
                "endpoint": "/api/services",
                "method": "GET",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "POST",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "PUT",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "DELETE",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "PATCH",
                "status": 400,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "HEAD",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "TRACE",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'TRACE' HTTP method is unsupported."
              },
              {
                "endpoint": "/api/services",
                "method": "CONNECT",
                "status": 0,
                "allowed": false,
                "safe": false,
                "error": "'CONNECT' HTTP method is unsupported."
              }
            ],
            "dangerousMethodsAllowed": 0,
            "optionsResults": [
              {
                "endpoint": "/api/health",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/profile",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              },
              {
                "endpoint": "/api/services",
                "method": "OPTIONS",
                "status": 200,
                "allowed": true,
                "safe": true
              }
            ],
            "totalTests": 27,
            "note": "HTTP method restrictions should be implemented for production"
          }
        }
      ],
      "environmentSecurityResults": [
        {
          "testName": "Environment Variable Validation",
          "status": "pass",
          "duration": 0,
          "details": {
            "configurationValid": true,
            "configurationErrors": [],
            "validationResults": [
              {
                "key": "NODE_ENV",
                "hasValue": true,
                "typeMatch": true,
                "optional": false,
                "valid": true
              },
              {
                "key": "PORT",
                "hasValue": true,
                "typeMatch": true,
                "optional": false,
                "valid": true
              },
              {
                "key": "DATABASE_URL",
                "hasValue": false,
                "typeMatch": true,
                "optional": true,
                "valid": true
              },
              {
                "key": "OPENAI_API_KEY",
                "hasValue": true,
                "typeMatch": true,
                "optional": true,
                "valid": true
              },
              {
                "key": "ADMIN_TOKEN",
                "hasValue": false,
                "typeMatch": true,
                "optional": true,
                "valid": true
              }
            ],
            "invalidConfigs": 0
          }
        },
        {
          "testName": "Sensitive Data Protection",
          "status": "pass",
          "duration": 1,
          "details": {
            "safeConfigKeys": ["PORT", "NODE_ENV", "OPERATIONS_WS_PORT"],
            "exposedSensitiveKeys": [],
            "maskingResults": [
              {
                "key": "OPENAI_API_KEY",
                "original": "sk-1234567890abcdef1234567890abcdef12345678",
                "masked": "sk-1***********************************5678",
                "correctlyMasked": true
              },
              {
                "key": "ADMIN_TOKEN",
                "original": "admin123456789012345678901234567890",
                "masked": "admi***************************7890",
                "correctlyMasked": true
              },
              {
                "key": "DATABASE_URL",
                "original": "postgres://user:pass@host:5432/db",
                "masked": "post*************************2/db",
                "correctlyMasked": true
              },
              {
                "key": "PORT",
                "original": "5000",
                "masked": "5000",
                "correctlyMasked": true
              }
            ],
            "incorrectMasking": 0
          }
        },
        {
          "testName": "Configuration Security Audit",
          "status": "pass",
          "duration": 0,
          "details": {
            "audit": {
              "configuredKeys": ["PORT", "NODE_ENV", "OPENAI_API_KEY", "OPERATIONS_WS_PORT"],
              "sensitiveKeys": ["OPENAI_API_KEY"],
              "missingRecommended": [],
              "weakConfigurations": []
            },
            "securityIssues": [],
            "formatTests": [
              {
                "key": "OPENAI_API_KEY",
                "valid": true,
                "issue": null
              }
            ],
            "formatIssues": 0,
            "totalConfiguredKeys": 4,
            "sensitiveKeysCount": 1
          }
        },
        {
          "testName": "Environment Variable Injection Prevention",
          "status": "pass",
          "duration": 0,
          "details": {
            "sanitizationResults": [
              {
                "input": "normal_value",
                "expected": "normal_value",
                "sanitized": "normal_value",
                "correct": true,
                "safe": true
              },
              {
                "input": "value\u0000with\u0001control",
                "expected": "valuewithcontrol",
                "sanitized": "valuewithcontrol",
                "correct": true,
                "safe": true
              },
              {
                "input": "value\r\nwith\r\nnewlines",
                "expected": "valuewithnewlines",
                "sanitized": "valuewithnewlines",
                "correct": true,
                "safe": true
              },
              {
                "input": "  spaced_value  ",
                "expected": "spaced_value",
                "sanitized": "spaced_value",
                "correct": true,
                "safe": true
              },
              {
                "input": "",
                "correct": true,
                "safe": true
              },
              {
                "input": "\u0000\u0001\u0002",
                "correct": true,
                "safe": true
              }
            ],
            "failedSanitization": 0,
            "injectionResults": [
              {
                "pattern": "${ADMIN_TOKEN}",
                "sanitized": "${ADMIN_TOKEN}",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "#{ENV['OPENAI_API_KEY']}",
                "sanitized": "#{ENV['OPENAI_API_KEY']}",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "%OPENAI_API_KEY%",
                "sanitized": "%OPENAI_API_KEY%",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "$OPENAI_API_KEY",
                "sanitized": "$OPENAI_API_KEY",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "`env`",
                "sanitized": "`env`",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "$(env)",
                "sanitized": "$(env)",
                "blocked": true,
                "safe": true
              },
              {
                "pattern": "../../../etc/passwd",
                "sanitized": "../../../etc/passwd",
                "blocked": true,
                "safe": true
              }
            ],
            "note": "Environment variable injection prevention relies on proper input sanitization"
          }
        },
        {
          "testName": "Secrets Management Security",
          "status": "pass",
          "duration": 0,
          "details": {
            "secretsTests": [
              {
                "key": "OPENAI_API_KEY",
                "configured": true,
                "markedSensitive": true,
                "correct": true
              },
              {
                "key": "ADMIN_TOKEN",
                "configured": false,
                "markedSensitive": false,
                "correct": true
              },
              {
                "key": "DATABASE_URL",
                "configured": false,
                "markedSensitive": false,
                "correct": true
              },
              {
                "key": "POSTGRES_URL",
                "configured": false,
                "markedSensitive": false,
                "correct": true
              },
              {
                "key": "NODE_ENV",
                "configured": true,
                "markedSensitive": false,
                "correct": true
              },
              {
                "key": "PORT",
                "configured": true,
                "markedSensitive": false,
                "correct": true
              },
              {
                "key": "DEMO_SCENARIO",
                "configured": false,
                "markedSensitive": false,
                "correct": true
              }
            ],
            "incorrectClassification": 0,
            "rotationReadiness": {
              "hasConfigValidation": true,
              "hasSecureDefaults": true,
              "hasMasking": true,
              "hasAuditCapability": true
            },
            "rotationScore": 4,
            "totalSensitiveKeys": 1,
            "note": "Secrets management includes classification, masking, and audit capabilities"
          }
        }
      ],
      "summary": {
        "criticalIssues": 0,
        "warnings": 2,
        "recommendations": [
          "Implement rate limiting to prevent abuse",
          "Add security headers to all API endpoints",
          "Consider implementing Content Security Policy (CSP) headers",
          "Add request logging and monitoring for security events",
          "Implement proper error handling to prevent information disclosure",
          "Consider adding API authentication for sensitive endpoints",
          "Implement CORS policy appropriate for production environment"
        ]
      }
    },
    "securityHeaders": [
      {
        "name": "X-Content-Type-Options header",
        "passed": true,
        "details": {
          "expected": "nosniff",
          "actual": "nosniff"
        }
      },
      {
        "name": "X-Frame-Options header",
        "passed": true,
        "details": {
          "expected": "DENY",
          "actual": "DENY"
        }
      },
      {
        "name": "Content Security Policy header",
        "passed": true,
        "details": {
          "hasCSP": true,
          "containsDefaultSrc": true
        }
      },
      {
        "name": "X-XSS-Protection header",
        "passed": true,
        "details": {
          "expected": "1; mode=block",
          "actual": "1; mode=block"
        }
      },
      {
        "name": "Referrer-Policy header",
        "passed": true,
        "details": {
          "expected": "strict-origin-when-cross-origin",
          "actual": "strict-origin-when-cross-origin"
        }
      },
      {
        "name": "X-Powered-By header removal",
        "passed": true,
        "details": {
          "shouldBeNull": true,
          "actual": null
        }
      },
      {
        "name": "API cache control headers",
        "passed": true,
        "details": {
          "expected": "no-store, no-cache, must-revalidate, private",
          "actual": "no-store, no-cache, must-revalidate, private"
        }
      },
      {
        "name": "HSTS header (development)",
        "passed": true,
        "details": {
          "shouldBeNull": true,
          "actual": null
        }
      }
    ],
    "strictSecurityHeaders": [
      {
        "name": "Strict CSP policy",
        "passed": true,
        "details": {
          "hasCSP": true,
          "isStrict": true,
          "csp": "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; font-src 'self'; connect-sr..."
        }
      },
      {
        "name": "Strict referrer policy",
        "passed": true,
        "details": {
          "expected": "no-referrer",
          "actual": "no-referrer"
        }
      }
    ],
    "penetrationTests": [
      {
        "testName": "Directory Traversal Attack Prevention",
        "status": "pass",
        "severity": "info",
        "description": "Tests for directory traversal vulnerabilities",
        "details": {
          "attempts": [
            "../../../etc/passwd",
            "..\\..\\..\\windows\\system32\\drivers\\etc\\hosts",
            "....//....//....//etc/passwd",
            "%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd",
            "..%252f..%252f..%252fetc%252fpasswd"
          ],
          "responses": [
            {
              "payload": "../../../etc/passwd",
              "status": 200,
              "hasSystemContent": false
            },
            {
              "payload": "..\\..\\..\\windows\\system32\\drivers\\etc\\hosts",
              "status": 200,
              "hasSystemContent": false
            },
            {
              "payload": "....//....//....//etc/passwd",
              "status": 200,
              "hasSystemContent": false
            },
            {
              "payload": "%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd",
              "status": 200,
              "hasSystemContent": false
            },
            {
              "payload": "..%252f..%252f..%252fetc%252fpasswd",
              "status": 200,
              "hasSystemContent": false
            }
          ]
        },
        "recommendations": ["Directory traversal protection is working correctly"]
      },
      {
        "testName": "HTTP Method Tampering Prevention",
        "status": "pass",
        "severity": "info",
        "description": "Tests for HTTP method tampering vulnerabilities",
        "details": {
          "methodResults": [
            {
              "method": "PUT",
              "status": 400,
              "allowed": true
            },
            {
              "method": "DELETE",
              "status": 200,
              "allowed": true
            },
            {
              "method": "PATCH",
              "status": 400,
              "allowed": true
            },
            {
              "method": "TRACE",
              "status": "error",
              "error": "'TRACE' HTTP method is unsupported."
            },
            {
              "method": "OPTIONS",
              "status": 200,
              "allowed": true
            },
            {
              "method": "CONNECT",
              "status": "error",
              "error": "'CONNECT' HTTP method is unsupported."
            }
          ]
        },
        "recommendations": ["HTTP method restrictions are properly configured"]
      },
      {
        "testName": "Header Injection Attack Prevention",
        "status": "pass",
        "severity": "info",
        "description": "Tests for HTTP header injection vulnerabilities",
        "details": {
          "headerTests": [
            {
              "injectedHeader": "X-Forwarded-For",
              "error": "Headers.append: \"127.0.0.1\r\nX-Injected-Header: malicious\" is an invalid header value."
            },
            {
              "injectedHeader": "User-Agent",
              "error": "Headers.append: \"Mozilla/5.0\r\nX-Injected: true\" is an invalid header value."
            },
            {
              "injectedHeader": "Referer",
              "error": "Headers.append: \"http://example.com\r\nSet-Cookie: injected=true\" is an invalid header value."
            }
          ]
        },
        "recommendations": ["Header injection protection is working correctly"]
      },
      {
        "testName": "Authentication Bypass Prevention",
        "status": "pass",
        "severity": "info",
        "description": "Tests for authentication bypass vulnerabilities on protected endpoints",
        "details": {
          "bypassAttempts": [
            {
              "endpoint": "/api/demo/seed",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/seed",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/seed",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/seed",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/seed",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/time",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/time",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/time",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/time",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/time",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/reset",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/reset",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/reset",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/reset",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/demo/reset",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/pos/sales",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/pos/sales",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/pos/sales",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/pos/sales",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/pos/sales",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/loyalty/entries",
              "description": "Invalid token",
              "headers": {
                "Authorization": "Bearer invalid_token"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/loyalty/entries",
              "description": "Default credentials",
              "headers": {
                "Authorization": "Basic YWRtaW46YWRtaW4="
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/loyalty/entries",
              "description": "User ID header injection",
              "headers": {
                "X-User-ID": "1"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/loyalty/entries",
              "description": "Admin header injection",
              "headers": {
                "X-Admin": "true"
              },
              "status": 401,
              "bypassSuccessful": false
            },
            {
              "endpoint": "/api/loyalty/entries",
              "description": "Empty authorization",
              "headers": {
                "Authorization": ""
              },
              "status": 401,
              "bypassSuccessful": false
            }
          ]
        },
        "recommendations": ["Authentication bypass protection is working correctly"]
      },
      {
        "testName": "Session Fixation Attack Prevention",
        "status": "fail",
        "severity": "high",
        "description": "Tests for session fixation vulnerabilities and session security",
        "details": {
          "sessionTests": [
            {
              "test": "Session cookie security",
              "hasCookie": false,
              "cookieDetails": null,
              "isSecure": false,
              "isHttpOnly": false,
              "hasSameSite": false
            },
            {
              "test": "Session fixation attempt",
              "status": 200,
              "sentFixedSession": "fixed_session_12345",
              "receivedNewSession": null,
              "sessionRegenerated": null
            },
            {
              "test": "Session ID in URL parameters",
              "status": 200,
              "sessionIdInUrl": "fixed_session_12345",
              "sessionAcceptedFromUrl": false
            }
          ]
        },
        "recommendations": [
          "Implement proper session management with secure cookies and session regeneration"
        ]
      },
      {
        "testName": "CSRF Protection Validation",
        "status": "pass",
        "severity": "info",
        "description": "Tests for CSRF protection implementation on state-changing endpoints",
        "details": {
          "csrfTests": [
            {
              "endpoint": "/api/pos/sales",
              "test": "POST without CSRF token",
              "status": 401,
              "hasProtection": true
            },
            {
              "endpoint": "/api/pos/sales",
              "test": "POST with invalid CSRF token",
              "status": 401,
              "hasProtection": true
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "test": "POST without CSRF token",
              "status": 401,
              "hasProtection": true
            },
            {
              "endpoint": "/api/marketing/campaigns",
              "test": "POST with invalid CSRF token",
              "status": 401,
              "hasProtection": true
            },
            {
              "endpoint": "/api/loyalty/entries",
              "test": "POST without CSRF token",
              "status": 401,
              "hasProtection": true
            },
            {
              "endpoint": "/api/loyalty/entries",
              "test": "POST with invalid CSRF token",
              "status": 401,
              "hasProtection": true
            }
          ]
        },
        "recommendations": ["CSRF protection is properly implemented"]
      },
      {
        "testName": "Information Disclosure Prevention",
        "status": "pass",
        "severity": "info",
        "description": "Tests for information disclosure vulnerabilities",
        "details": {
          "disclosureTests": [
            {
              "path": "/api/debug",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/api/config",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/api/env",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/api/status",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/.env",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/package.json",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/server.js",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            },
            {
              "path": "/config.json",
              "status": 200,
              "accessible": true,
              "hasSecretInfo": false,
              "contentLength": 2424
            }
          ]
        },
        "recommendations": ["Information disclosure protection is working correctly"]
      },
      {
        "testName": "Rate Limiting Bypass Prevention",
        "status": "warning",
        "severity": "medium",
        "description": "Tests for rate limiting implementation and bypass attempts",
        "details": {
          "rateLimitTests": [
            {
              "test": "Rapid requests",
              "requestCount": 20,
              "statusCodes": [
                200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
                200, 200, 200
              ],
              "rateLimited": false,
              "allSuccessful": true
            },
            {
              "test": "IP header bypass attempt",
              "status": 200,
              "bypassSuccessful": true
            }
          ]
        },
        "recommendations": ["Implement rate limiting to prevent abuse and DoS attacks"]
      }
    ]
  },
  "recommendations": [
    "Implement rate limiting to prevent abuse",
    "Add security headers to all API endpoints",
    "Consider implementing Content Security Policy (CSP) headers",
    "Add request logging and monitoring for security events",
    "Implement proper error handling to prevent information disclosure",
    "Consider adding API authentication for sensitive endpoints",
    "Implement CORS policy appropriate for production environment",
    "Directory traversal protection is working correctly",
    "HTTP method restrictions are properly configured",
    "Header injection protection is working correctly",
    "Authentication bypass protection is working correctly",
    "Implement proper session management with secure cookies and session regeneration",
    "CSRF protection is properly implemented",
    "Information disclosure protection is working correctly",
    "Implement rate limiting to prevent abuse and DoS attacks"
  ],
  "complianceStatus": {
    "zeroVulnerabilities": true,
    "securityHeadersComplete": true,
    "inputValidationSecure": true,
    "authenticationSecure": true,
    "environmentSecure": true
  }
}
